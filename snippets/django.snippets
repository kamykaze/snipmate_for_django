# Model Fields

# Note: Optional arguments are using defaults that match what Django will use
# as a default, e.g. with max_length fields.  Doing this as a form of self
# documentation and to make it easy to know whether you should override the
# default or not.

# Note: Optional arguments that are booleans will use the opposite since you
# can either not specify them, or override them, e.g. auto_now_add=False.

snippet mauto
    ${1:FIELDNAME} = models.AutoField()
snippet mbool
    ${1:FIELDNAME} = models.BooleanField(${2:default=True})
snippet mchar
    ${1:FIELDNAME} = models.CharField(max_length=${2}${3:, blank=True})
snippet mcomma
    ${1:FIELDNAME} = models.CommaSeparatedIntegerField(max_length=${2}${3:, blank=True})
snippet mdate
    ${1:FIELDNAME} = models.DateField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})
snippet mdatetime
    ${1:FIELDNAME} = models.DateTimeField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})
snippet mdecimal
    ${1:FIELDNAME} = models.DecimalField(max_digits=${2}, decimal_places=${3})
snippet memail
    ${1:FIELDNAME} = models.EmailField(max_length=${2:75}${3:, blank=True})
snippet mfile
    ${1:FIELDNAME} = models.FileField(upload_to=${2:path/for/upload}${3:, max_length=100})
snippet mfilepath
    ${1:FIELDNAME} = models.FilePathField(path=${2:"/abs/path/to/dir"}${3:, max_length=100}${4:, match="*.ext"}${5:, recursive=True}${6:, blank=True, })
snippet mfloat
    ${1:FIELDNAME} = models.FloatField()
snippet mimage
    ${1:FIELDNAME} = models.ImageField(upload_to=${2:path/for/upload}${3:, height_field=height, width_field=width}${4:, max_length=100})
snippet mint
    ${1:FIELDNAME} = models.IntegerField()
snippet mip
    ${1:FIELDNAME} = models.IPAddressField()
snippet mnullbool
    ${1:FIELDNAME} = models.NullBooleanField()
snippet mposint
    ${1:FIELDNAME} = models.PositiveIntegerField()
snippet mpossmallint
    ${1:FIELDNAME} = models.PositiveSmallIntegerField()
snippet mslug
    ${1:FIELDNAME} = models.SlugField(max_length=${2:50}${3:, blank=True})
snippet msmall
    ${1:FIELDNAME} = models.SmallIntegerField()
snippet mtext
    ${1:FIELDNAME} = models.TextField(${2:blank=True})
snippet mtime
    ${1:FIELDNAME} = models.TimeField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})
snippet murl
    ${1:FIELDNAME} = models.URLField(${2:verify_exists=False}${3:, max_length=200}${4:, blank=True})
snippet mxml
    ${1:FIELDNAME} = models.XMLField(schema_path=${2:None}${3:, blank=True})
# Relational Fields
snippet mfk
    ${1:FIELDNAME} = models.ForeignKey(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, to_field=''})
snippet mm2m
    ${1:FIELDNAME} = models.ManyToManyField(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, symmetrical=False}${6:, through=''}${7:, db_table=''})
snippet mo2o
    ${1:FIELDNAME} = models.OneToOneField(${2:OtherModel}${3:, parent_link=True}${4:, related_name=''}${5:, limit_choices_to=}${6:, to_field=''})

# Form Fields

# Note: Optional arguments are using defaults that match what Django will use
# as a default, e.g. with max_length fields.  Doing this as a form of self
# documentation and to make it easy to know whether you should override the
# default or not.

# Note: Optional arguments that are booleans will use the opposite since you
# can either not specify them, or override them, e.g. required=False.

snippet fauto
    ${1:FIELDNAME} = forms.AutoField()
snippet fbool
    ${1:FIELDNAME} = forms.BooleanField(${2:default=True})
snippet fchar
    ${1:FIELDNAME} = forms.CharField(max_length=${2}${3:, blank=True})
snippet fcomma
    ${1:FIELDNAME} = forms.CommaSeparatedIntegerField(max_length=${2}${3:, blank=True})
snippet fdate
    ${1:FIELDNAME} = forms.DateField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})
snippet fdatetime
    ${1:FIELDNAME} = forms.DateTimeField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})
snippet fdecimal
    ${1:FIELDNAME} = forms.DecimalField(max_digits=${2}, decimal_places=${3})
snippet femail
    ${1:FIELDNAME} = forms.EmailField(max_length=${2:75}${3:, blank=True})
snippet file
    ${1:FIELDNAME} = forms.FileField(upload_to=${2:path/for/upload}${3:, max_length=100})
snippet filepath
    ${1:FIELDNAME} = forms.FilePathField(path=${2:"/abs/path/to/dir"}${3:, max_length=100}${4:, match="*.ext"}${5:, recursive=True}${6:, blank=True, })
snippet ffloat
    ${1:FIELDNAME} = forms.FloatField()
snippet fimage
    ${1:FIELDNAME} = forms.ImageField(upload_to=${2:path/for/upload}${3:, height_field=height, width_field=width}${4:, max_length=100})
snippet fint
    ${1:FIELDNAME} = forms.IntegerField()
snippet fip
    ${1:FIELDNAME} = forms.IPAddressField()
snippet fnullbool
    ${1:FIELDNAME} = forms.NullBooleanField()
snippet fposint
    ${1:FIELDNAME} = forms.PositiveIntegerField()
snippet fpossmallint
    ${1:FIELDNAME} = forms.PositiveSmallIntegerField()
snippet fslug
    ${1:FIELDNAME} = forms.SlugField(max_length=${2:50}${3:, blank=True})
snippet fsmall
    ${1:FIELDNAME} = forms.SmallIntegerField()
snippet ftext
    ${1:FIELDNAME} = forms.TextField(${2:blank=True})
snippet ftime
    ${1:FIELDNAME} = forms.TimeField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})
snippet furl
    ${1:FIELDNAME} = forms.URLField(${2:verify_exists=False}${3:, max_length=200}${4:, blank=True})
snippet fxml
    ${1:FIELDNAME} = forms.XMLField(schema_path=${2:None}${3:, blank=True})
# Relational Fields
snippet ffk
    ${1:FIELDNAME} = forms.ForeignKey(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, to_field=''})
snippet fm2m
    ${1:FIELDNAME} = forms.ManyToManyField(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, symmetrical=False}${6:, through=''}${7:, db_table=''})
snippet fo2o
    ${1:FIELDNAME} = forms.OneToOneField(${2:OtherModel}${3:, parent_link=True}${4:, related_name=''}${5:, limit_choices_to=}${6:, to_field=''})    

##
## Code Skeletons
##

# Form and Models

snippet form
    class ${1:FormName}(forms.Form):
        """${2:docstring}"""
        ${3}

snippet model
    class ${1:ModelName}(models.Model):
        """${2:docstring}"""
        ${3}
        
        class Meta:
            ${4}
        
        def __unicode__(self):
            ${5}
        
        def save(self, force_insert=False, force_update=False):
            ${6}
        
        @models.permalink
        def get_absolute_url(self):
            return ('${7:view_or_url_name}' ${8})

# Admin

snippet modeladmin
    class ${1:ModelName}Admin(admin.ModelAdmin):
        ${2}
    
    admin.site.register($1, $1Admin)

snippet tabularinline
    class ${1:ModelName}Inline(admin.TabularInline):
        model = $1
        extra = ${2:3}

snippet stackedinline
    class ${1:ModelName}Inline(admin.StackedInline):
        model = $1
        extra = ${2:3}

# Views

snippet r2r
    return render_to_response('${1:template.html}', {
            ${2}
        }${3:, context_instance=RequestContext(request)}
    )

snippet action
    def ${1:action}(request):
        """ Action """
        pass